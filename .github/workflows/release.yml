# Terraform Provider release workflow.
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0
      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true

      - name: Install GPG
        run: sudo apt-get update && sudo apt-get install -y gnupg sed
  
      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.PASSPHRASE }}
        run: |
           echo "$GPG_PRIVATE_KEY" | GPG_TTY=$(tty) gpg --batch --import --yes --passphrase "$GPG_PASSPHRASE"

      - name: Export GPG fingerprint
        id: gpg-fingerprint
        run: |
          gpg_output=$(gpg --list-keys --fingerprint terraform-provider-axwayst | grep -A 1 "pub" | grep -v "pub" | sed 's/[ \t]//g')
          echo "gpg_key=$gpg_output" >> $GITHUB_OUTPUT

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@9c156ee8a17a598857849441385a2041ef570552 # v6.3.0
        with:
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.gpg-fingerprint.outputs.gpg_key }}
          GPG_PASSPHRASE: ${{ secrets.PASSPHRASE }}
